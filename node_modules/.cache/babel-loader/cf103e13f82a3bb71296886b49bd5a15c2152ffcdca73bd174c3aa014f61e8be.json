{"ast":null,"code":"import _classCallCheck from \"/Users/shazil/ShazilR.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/shazil/ShazilR.github.io/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/shazil/ShazilR.github.io/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/shazil/ShazilR.github.io/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/shazil/ShazilR.github.io/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/shazil/ShazilR.github.io/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/shazil/ShazilR.github.io/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport VantaBase from './_base.js';\nimport { extend } from './helpers.js';\nexport { VANTA } from './_base.js';\nvar win = typeof window == 'object';\nvar THREE = win && window.THREE;\nvar ShaderBase = /*#__PURE__*/function (_VantaBase) {\n  _inherits(ShaderBase, _VantaBase);\n  var _super = _createSuper(ShaderBase);\n  function ShaderBase(userOptions) {\n    var _this;\n    _classCallCheck(this, ShaderBase);\n    THREE = userOptions.THREE || THREE;\n    THREE.Color.prototype.toVector = function () {\n      return new THREE.Vector3(this.r, this.g, this.b);\n    };\n    _this = _super.call(this, userOptions);\n    _this.updateUniforms = _this.updateUniforms.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(ShaderBase, [{\n    key: \"init\",\n    value: function init() {\n      this.mode = 'shader';\n      this.uniforms = {\n        iTime: {\n          type: \"f\",\n          value: 1.0\n        },\n        iResolution: {\n          type: \"v2\",\n          value: new THREE.Vector2(1, 1)\n        },\n        iDpr: {\n          type: \"f\",\n          value: window.devicePixelRatio || 1\n        },\n        iMouse: {\n          type: \"v2\",\n          value: new THREE.Vector2(this.mouseX || 0, this.mouseY || 0)\n        }\n      };\n      _get(_getPrototypeOf(ShaderBase.prototype), \"init\", this).call(this);\n      if (this.fragmentShader) {\n        this.initBasicShader();\n      }\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(userOptions) {\n      _get(_getPrototypeOf(ShaderBase.prototype), \"setOptions\", this).call(this, userOptions);\n      this.updateUniforms();\n    }\n  }, {\n    key: \"initBasicShader\",\n    value: function initBasicShader() {\n      var fragmentShader = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.fragmentShader;\n      var vertexShader = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.vertexShader;\n      if (!vertexShader) {\n        vertexShader = \"uniform float uTime;\\nuniform vec2 uResolution;\\nvoid main() {\\n  gl_Position = vec4( position, 1.0 );\\n}\";\n      }\n      this.updateUniforms();\n      if (typeof this.valuesChanger === \"function\") {\n        this.valuesChanger(); // Some effects define this themselves\n      }\n\n      var material = new THREE.ShaderMaterial({\n        uniforms: this.uniforms,\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader\n      });\n      var texPath = this.options.texturePath;\n      if (texPath) {\n        this.uniforms.iTex = {\n          type: \"t\",\n          value: new THREE.TextureLoader().load(texPath)\n        };\n      }\n      var mesh = new THREE.Mesh(new THREE.PlaneGeometry(2, 2), material);\n      this.scene.add(mesh);\n      this.camera = new THREE.Camera();\n      this.camera.position.z = 1;\n    }\n  }, {\n    key: \"updateUniforms\",\n    value: function updateUniforms() {\n      var newUniforms = {};\n      var k, v;\n      for (k in this.options) {\n        v = this.options[k];\n        if (k.toLowerCase().indexOf('color') !== -1) {\n          newUniforms[k] = {\n            type: \"v3\",\n            value: new THREE.Color(v).toVector()\n          };\n        } else if (typeof v === 'number') {\n          newUniforms[k] = {\n            type: \"f\",\n            value: v\n          };\n        }\n      }\n      return extend(this.uniforms, newUniforms);\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      _get(_getPrototypeOf(ShaderBase.prototype), \"resize\", this).call(this);\n      this.uniforms.iResolution.value.x = this.width / this.scale;\n      this.uniforms.iResolution.value.y = this.height / this.scale;\n    }\n  }]);\n  return ShaderBase;\n}(VantaBase);\nexport { ShaderBase as default };","map":{"version":3,"names":["VantaBase","extend","VANTA","win","window","THREE","ShaderBase","userOptions","Color","prototype","toVector","Vector3","r","g","b","updateUniforms","bind","mode","uniforms","iTime","type","value","iResolution","Vector2","iDpr","devicePixelRatio","iMouse","mouseX","mouseY","fragmentShader","initBasicShader","vertexShader","valuesChanger","material","ShaderMaterial","texPath","options","texturePath","iTex","TextureLoader","load","mesh","Mesh","PlaneGeometry","scene","add","camera","Camera","position","z","newUniforms","k","v","toLowerCase","indexOf","x","width","scale","y","height"],"sources":["/Users/shazil/ShazilR.github.io/node_modules/vanta/src/_shaderBase.js"],"sourcesContent":["import VantaBase from './_base.js'\nimport {extend} from './helpers.js'\nexport {VANTA} from './_base.js'\n\nconst win = typeof window == 'object'\nlet THREE = win && window.THREE\n\nexport default class ShaderBase extends VantaBase {\n  constructor(userOptions) {\n    THREE = userOptions.THREE || THREE\n    THREE.Color.prototype.toVector = function(){\n      return new THREE.Vector3(this.r, this.g, this.b)\n    }\n    super(userOptions)\n    this.updateUniforms = this.updateUniforms.bind(this)\n  }\n  init(){\n    this.mode = 'shader'\n    this.uniforms = {\n      iTime: {\n        type: \"f\",\n        value: 1.0\n      },\n      iResolution: {\n        type: \"v2\",\n        value: new THREE.Vector2(1, 1)\n      },\n      iDpr: {\n        type: \"f\",\n        value: window.devicePixelRatio || 1\n      },\n      iMouse: {\n        type: \"v2\",\n        value: new THREE.Vector2(this.mouseX || 0, this.mouseY || 0)\n      }\n    }\n    super.init()\n    if (this.fragmentShader) {\n      this.initBasicShader()\n    }\n  }\n  setOptions(userOptions){\n    super.setOptions(userOptions)\n    this.updateUniforms()\n  }\n  initBasicShader(fragmentShader = this.fragmentShader, vertexShader = this.vertexShader) {\n    if (!vertexShader) {\n      vertexShader = \"uniform float uTime;\\nuniform vec2 uResolution;\\nvoid main() {\\n  gl_Position = vec4( position, 1.0 );\\n}\"\n    }\n    this.updateUniforms()\n    if (typeof this.valuesChanger === \"function\") {\n      this.valuesChanger() // Some effects define this themselves\n    }\n    const material = new THREE.ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader\n    })\n    const texPath = this.options.texturePath\n    if (texPath) {\n      this.uniforms.iTex = {\n        type: \"t\",\n        value: new THREE.TextureLoader().load(texPath)\n      }\n    }\n    const mesh = new THREE.Mesh(new THREE.PlaneGeometry(2, 2), material)\n    this.scene.add(mesh)\n    this.camera = new THREE.Camera()\n    this.camera.position.z = 1\n  }\n\n  updateUniforms() {\n    const newUniforms = {}\n    let k, v\n    for (k in this.options) {\n      v = this.options[k]\n      if (k.toLowerCase().indexOf('color') !== -1) {\n        newUniforms[k] = {\n          type: \"v3\",\n          value: new THREE.Color(v).toVector()\n        }\n      } else if (typeof v === 'number') {\n        newUniforms[k] = {\n          type: \"f\",\n          value: v\n        }\n      }\n    }\n    return extend(this.uniforms, newUniforms)\n  }\n  resize(){\n    super.resize()\n    this.uniforms.iResolution.value.x = this.width / this.scale\n    this.uniforms.iResolution.value.y = this.height / this.scale\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}